<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net452;net462;net472</TargetFrameworks>
    <Authors>Microsoft</Authors>
    <PackageProjectUrl>https://github.com/Microsoft/fsharplu</PackageProjectUrl>
    <PackageLicenseFile>LICENSE.MD</PackageLicenseFile>
    <Description>Utilities and .Net library wrappers for F#</Description>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
    <PackageTags>F#, FSharp, FSharp utilities, collection, logging, diagnostic, async, Json</PackageTags>
    <PackageReleaseNotes>
      - Add HttpCommunication module, a strongly-typed HTTP client thin library
      - Add support for environment variable and error output capture in `startProcess` API
      - Add Knuth-Morris-Pratt implementation for searching a string in a file stream
      - Add state machine and agent module used to implement long-running operations in services
      - Add Windows/Linux platform helpers
      - Add the Combine functor for the TraceTags statically-typed global logger
      - Hardening of startProcess API to handle corner cases (e.g. process ends too quickly or too slowly)
      - And more: parsing helpers, EXE type, IDisposable helpers, Compression, certificate, CacheMap collection
    </PackageReleaseNotes>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Company>Microsoft</Company>
    <Product>Microsoft.FSharpLu</Product>
    <Title>FSharpLu F# Utility libary</Title>
    <PackageId>Microsoft.FSharpLu</PackageId>
    <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    <Version>$(NUGET_PACKAGE_VERSION)</Version>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(DELAYSIGNING)' == 'True' ">
    <SignAssembly>true</SignAssembly>
    <DelaySign>true</DelaySign>
    <AssemblyOriginatorKeyFile>..\msft-StrongName.pub</AssemblyOriginatorKeyFile>
  </PropertyGroup>

  <PropertyGroup>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\Microsoft.FSharpLu.xml</DocumentationFile>
    <AssemblyName>Microsoft.FSharpLu</AssemblyName>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System.Net.Http.WebRequest" Condition="'$(TargetFramework)' != 'netstandard2.0'" />
  </ItemGroup>

  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <Tailcalls>false</Tailcalls>
    <DefineConstants>DEBUG;TRACE;$(CompilationSymbols)</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>portable</DebugType>
    <Optimize>true</Optimize>
    <Tailcalls>true</Tailcalls>
    <DefineConstants>TRACE;$(CompilationSymbols)</DefineConstants>
  </PropertyGroup>

  <ItemGroup>
    <Compile Include="FSharpFromCSharp.fs" />
    <Compile Include="Option.fs" />
    <Compile Include="Text.fs" />
    <Compile Include="TraceLogging.fs" />
    <Compile Include="Logger.fs" />
    <Compile Include="Collections.fs" />
    <Compile Include="Async.fs" />
    <Compile Include="StateMachine.fs" />
    <Compile Include="QueueScheduler.fs" />
    <Compile Include="ServiceRequest.fs" />
    <Compile Include="AsyncSeq.fs" />
    <Compile Include="File.fs" />
    <Compile Include="Configuration.fs" />
    <Compile Include="Security.fs" />
    <Compile Include="Parsing.fs" />
    <Compile Include="Platform.fs" />
    <Compile Include="Diagnostics.fs" />
    <Compile Include="ErrorHandling.fs" />
    <Compile Include="Compression.fs" />
    <Compile Include="Disposable.fs" />
    <Compile Include="Ini.fs" />
    <Compile Include="CacheMap.fs" />
    <Compile Include="ExecutableInfo.fs" />
    <Compile Include="MachineOperations.fs" />
    <Compile Include="HttpCommunication.fs" />
  </ItemGroup>

  <ItemGroup>
    <Content Include="Sysprep.ps1">
      <IncludeInPackage>true</IncludeInPackage>
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
      <!-- See https://stackoverflow.com/questions/44073501/how-do-you-set-nuget-contentfiles-copytooutput-value-to-true-when-using-a-net-s
      and https://github.com/NuGet/NuGet.Client/pull/1450-->
      <PackageCopyToOutput>true</PackageCopyToOutput>
    </Content>
  </ItemGroup>


  <ItemGroup>
    <None Include="..\LICENSE.MD" Pack="true" PackagePath="$(PackageLicenseFile)" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net452'">
    <Reference Include="System.Configuration" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net462'">
    <PackageReference Include="System.Configuration" Version="2.0.5" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'net472'">
    <PackageReference Include="System.Configuration" Version="2.0.5" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard2.0'">
    <PackageReference Include="System.Configuration" Version="2.0.5" />
    <PackageReference Include="System.Configuration.ConfigurationManager" Version="4.5.0" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="FSharp.Control.AsyncSeq" Version="2.0.21" />
    <PackageReference Include="Microsoft.AspNet.WebApi.Client" Version="5.2.7" />
    <PackageReference Include="Newtonsoft.Json" Version="10.0.3" />
    <PackageReference Include="System.IO.Compression" Version="4.3.0" />
    <PackageReference Include="System.Net.Http" Version="4.3.4" />
    <PackageReference Include="System.Net.Requests" Version="4.3.0" />
    <PackageReference Include="System.ValueTuple" Version="4.5.0" />
    <PackageReference Update="FSharp.Core" Version="4.5.4" />
  </ItemGroup>

</Project>